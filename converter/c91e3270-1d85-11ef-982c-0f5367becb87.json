{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : null,
      "tbelDecoder" : "// Decode an uplink message from a buffer\n// payload - array of bytes\n// metadata - key/value object\n\n/** Decoder **/\n\n// decode payload to string\n//var payloadStr = decodeToString(payload);\n\n// decode payload to JSON\n var data = decodeToJson(payload);\n\n//var deviceName = 'Device A';\n//var deviceType = 'thermostat';\n//var customerName = 'Customer C';\n//var groupName = 'thermostat devices';\n//var manufacturer = 'Example corporation';\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\n\n// Result object with device/asset attributes/telemetry data\nvar tt={};\nif(data[0].Measurements.SRILANKA300_Inverter_Watts_W>0){\n    tt.INV3_GEN_MODE=1;\n}\nelse{ tt.INV3_GEN_MODE=0;}\n\nif(data[1].Measurements.SRILANKA300_Inverter_Watts_W>0){\n    tt.INV2_GEN_MODE=1;\n}\nelse{ tt.INV2_GEN_MODE=0;}\nif(data[2].Measurements.SRILANKA300_Inverter_Watts_W>0){\n    tt.INV1_GEN_MODE=1;\n}\nelse{ tt.INV1_GEN_MODE=0;}\n\nvar yy={};\nif(data[0].Measurements.SRILANKA300_Inverter_Off===1){\n    yy.INV3_com_fail=1;\n}\nelse{ yy.INV3_com_fail=0;}\n\nif(data[1].Measurements.SRILANKA300_Inverter_Off===1){\n    yy.INV2_com_fail=1;\n}\nelse{ yy.INV2_com_fail=0;}\nif(data[2].Measurements.SRILANKA300_Inverter_Off===1){\n    yy.INV1_com_fail=1;\n}\nelse{ yy.INV1_com_fail=0;}\n\nvar zz={};\nif(data[0].Measurements.SRILANKA300_Inverter_Fault===1){\n    zz.INV3_Fault=1;\n}\nelse{ zz.INV3_Fault=0;}\n\nif(data[1].Measurements.SRILANKA300_Inverter_Fault===1){\n    zz.INV2_Fault=1;\n}\nelse{ zz.INV2_Fault=0;}\n\nif(data[2].Measurements.SRILANKA300_Inverter_Fault===1){\n    zz.INV1_Fault=1;\n}\nelse{ zz.INV1_Fault=0;}\n\n\nvar result = [{\n   deviceName: 'DL300-Inverter-3',\n   deviceType: 'INV',\n   telemetry: {\n       Inverter_off:data[0].Measurements.Inv_Off,\n       DC_Watts:data[0].Measurements.Inv_DC_Watts,\n       DC_Volts:data[0].Measurements.Inv_DC_V,\n       DC_Amps:data[0].Measurements.Inv_DC_A,\n       Other_Temp:data[0].Measurements.Inv_Other_Temp,\n       Transformer_Temp:data[0].Measurements.Inv_Transformer_Temp,\n       HeatSink_Temp:data[0].Measurements.Inv_Heatsink_Temp,\n       Cabinet_Temp:data[0].Measurements.Inv_Cabinet_Temp,\n       DC_Watts_DCW:data[0].Measurements.Inv_DC_W,\n       DC_Volt:data[0].Measurements.Inv_DC_Volts,\n       DC_Amps_DCA:data[0].Measurements.Inv_DC_Amps,\n       Energy_Total_kWh:data[0].Measurements.Inv_Energy_WH,\n       PF:data[0].Measurements.Inv_PF,\n       AC_Reactive_VAr:data[0].Measurements.Inv_VAr,\n       AC_Apparant_Power_VA:data[0].Measurements.Inv_VA,\n       Frequency_Hz:data[0].Measurements.Inv_Hz,\n       AC_Active_Power_Watt:data[0].Measurements.Inv_Active_Power_W,\n       Active_Power_reference:data[0].Measurements.Inv_ActivePower_SP,\n       Volts_L3_N:data[0].Measurements.Inv_Phase_Volt_CN,\n       Volts_L2_N:data[0].Measurements.Inv_Phase_Volt_BN,\n       Volts_L1_N:data[0].Measurements.Inv_Phase_Volt_AN,\n       Volts_L1_L3:data[0].Measurements.Inv_Line_Volt_CA,\n       Volts_L2_L3:data[0].Measurements.Inv_Line_Volt_BC,\n       Volts_L1_L2:data[0].Measurements.Inv_Line_Volt_AB,\n       Amps_L3_N:data[0].Measurements.Inv_Amps_C,\n       Amps_L2_N:data[0].Measurements.Inv_Amps_B,\n       Amps_L1_N:data[0].Measurements.Inv_Amps_A,\n       Amps_A:data[0].Measurements.Inv_Total_A,\n       Gnd_Fault_Alarm:data[0].Measurements.Inv_Ground_Fault,\n       DC_over_voltage_Alarm:data[0].Measurements.Inv_DC_over_voltage,\n       AC_disconnect_open_Alarm:data[0].Measurements.Inv_AC_disconnect,\n       DC_disconnect_open_Alarm:data[0].Measurements.Inv_DC_disconnect,\n       Grid_shutdown_Alarm:data[0].Measurements.Inv_Grid_shutdown,\n       Cabinet_open_Alarm:data[0].Measurements.Inv_Cabinet_open,\n       Manual_shutdown_Alarm:data[0].Measurements.Inv_Manual_shutdown,\n       Over_temperature_Alarm:data[0].Measurements.Inv_Over_temperature,\n       Frequency_above_limit_Alarm:data[0].Measurements.Inv_Hz_above_lmt,\n       Frequency_under_limit_Alarm:data[0].Measurements.Inv_Hz_under_lmt,\n       AC_Voltage_above_limit_Alarm:data[0].Measurements.Inv_AC_V_above_lmt,\n       AC_Voltage_under_limit_Alarm:data[0].Measurements.Inv_AC_V_under_lmt,\n       Blown_String_fuse_Alarm:data[0].Measurements.Inv_Stringfuse,\n       Under_temperature_Alarm:data[0].Measurements.Inv_Under_temp,\n       Generic_Memory_or_Comm_error_Alarm:data[0].Measurements.Inv_Comm_Error,\n       Hardware_test_failure_Alarm:data[0].Measurements.Inv_Hardwaretest_fail,\n       Off_Event:data[0].Measurements.Inv_Off,\n       Sleeping_Event:data[0].Measurements.Inv_Sleeping,\n       Starting_Event:data[0].Measurements.Inv_Starting,\n       MPPT_Event:data[0].Measurements.Inv_MPPT,\n       Throttled_Event:data[0].Measurements.Inv_Throttled,\n       Shutting_down_Event:data[0].Measurements.Inv_Shutting_down,\n       Fault_Alarm:data[0].Inv_Fault,\n       Generating_Mode:tt.INV3_GEN_MODE,\n\n   }\n},\n{\n   deviceName: 'DL300-Inverter-2',\n   deviceType: 'INV',\n   telemetry: {\n       Inverter_off:data[1].Measurements.Inv_Off,\n       DC_Watts:data[1].Measurements.Inv_DC_Watts,\n       DC_Volts:data[1].Measurements.Inv_DC_V,\n       DC_Amps:data[1].Measurements.Inv_DC_A,\n       Other_Temp:data[1].Measurements.Inv_Other_Temp,\n       Transformer_Temp:data[1].Measurements.Inv_Transformer_Temp,\n       HeatSink_Temp:data[1].Measurements.Inv_Heatsink_Temp,\n       Cabinet_Temp:data[1].Measurements.Inv_Cabinet_Temp,\n       DC_Watts_DCW:data[1].Measurements.Inv_DC_W,\n       DC_Volt:data[1].Measurements.Inv_DC_Volts,\n       DC_Amps_DCA:data[1].Measurements.Inv_DC_Amps,\n       Energy_Total_kWh:data[1].Measurements.Inv_Energy_WH,\n       PF:data[1].Measurements.Inv_PF,\n       AC_Reactive_VAr:data[1].Measurements.Inv_VAr,\n       AC_Apparant_Power_VA:data[1].Measurements.Inv_VA,\n       Frequency_Hz:data[1].Measurements.Inv_Hz,\n       AC_Active_Power_Watt:data[1].Measurements.Inv_Active_Power_W,\n       Active_Power_reference:data[1].Measurements.Inv_ActivePower_SP,\n       Volts_L3_N:data[1].Measurements.Inv_Phase_Volt_CN,\n       Volts_L2_N:data[1].Measurements.Inv_Phase_Volt_BN,\n       Volts_L1_N:data[1].Measurements.Inv_Phase_Volt_AN,\n       Volts_L1_L3:data[1].Measurements.Inv_Line_Volt_CA,\n       Volts_L2_L3:data[1].Measurements.Inv_Line_Volt_BC,\n       Volts_L1_L2:data[1].Measurements.Inv_Line_Volt_AB,\n       Amps_L3_N:data[1].Measurements.Inv_Amps_C,\n       Amps_L2_N:data[1].Measurements.Inv_Amps_B,\n       Amps_L1_N:data[1].Measurements.Inv_Amps_A,\n       Amps_A:data[1].Measurements.Inv_Total_A,\n       Gnd_Fault_Alarm:data[1].Measurements.Inv_Ground_Fault,\n       DC_over_voltage_Alarm:data[1].Measurements.Inv_DC_over_voltage,\n       AC_disconnect_open_Alarm:data[1].Measurements.Inv_AC_disconnect,\n       DC_disconnect_open_Alarm:data[1].Measurements.Inv_DC_disconnect,\n       Grid_shutdown_Alarm:data[1].Measurements.Inv_Grid_shutdown,\n       Cabinet_open_Alarm:data[1].Measurements.Inv_Cabinet_open,\n       Manual_shutdown_Alarm:data[1].Measurements.Inv_Manual_shutdown,\n       Over_temperature_Alarm:data[1].Measurements.Inv_Over_temperature,\n       Frequency_above_limit_Alarm:data[1].Measurements.Inv_Hz_above_lmt,\n       Frequency_under_limit_Alarm:data[1].Measurements.Inv_Hz_under_lmt,\n       AC_Voltage_above_limit_Alarm:data[1].Measurements.Inv_AC_V_above_lmt,\n       AC_Voltage_under_limit_Alarm:data[1].Measurements.Inv_AC_V_under_lmt,\n       Blown_String_fuse_Alarm:data[1].Measurements.Inv_Stringfuse,\n       Under_temperature_Alarm:data[1].Measurements.Inv_Under_temp,\n       Generic_Memory_or_Comm_error_Alarm:data[1].Measurements.Inv_Comm_Error,\n       Hardware_test_failure_Alarm:data[1].Measurements.Inv_Hardwaretest_fail,\n       Off_Event:data[1].Measurements.Inv_Off,\n       Sleeping_Event:data[1].Measurements.Inv_Sleeping,\n       Starting_Event:data[1].Measurements.Inv_Starting,\n       MPPT_Event:data[1].Measurements.Inv_MPPT,\n       Throttled_Event:data[1].Measurements.Inv_Throttled,\n       Shutting_down_Event:data[1].Measurements.Inv_Shutting_down,\n       Fault_Alarm:data[1].Inv_Fault,\n       Generating_Mode:tt.INV3_GEN_MODE,\n\n\n   }\n},\n\n{\n   deviceName: 'DL300-Inverter-1',\n   deviceType: 'INV',\n   telemetry: {\n       Inverter_off:data[2].Measurements.Inv_Off,\n       DC_Watts:data[2].Measurements.Inv_DC_Watts,\n       DC_Volts:data[2].Measurements.Inv_DC_V,\n       DC_Amps:data[2].Measurements.Inv_DC_A,\n       Other_Temp:data[2].Measurements.Inv_Other_Temp,\n       Transformer_Temp:data[2].Measurements.Inv_Transformer_Temp,\n       HeatSink_Temp:data[2].Measurements.Inv_Heatsink_Temp,\n       Cabinet_Temp:data[2].Measurements.Inv_Cabinet_Temp,\n       DC_Watts_DCW:data[2].Measurements.Inv_DC_W,\n       DC_Volt:data[2].Measurements.Inv_DC_Volts,\n       DCA:data[2].Measurements.Inv_DC_Amps,\n       Energy_Total_kWh:data[2].Measurements.Inv_Energy_WH,\n       PF:data[2].Measurements.Inv_PF,\n       AC_Reactive_VAr:data[2].Measurements.Inv_VAr,\n       AC_Apparant_Power_VA:data[2].Measurements.Inv_VA,\n       Frequency_Hz:data[2].Measurements.Inv_Hz,\n       AC_Active_Power_Watt:data[2].Measurements.Inv_Active_Power_W,\n       Active_Power_reference:data[2].Measurements.Inv_ActivePower_SP,\n       Volts_L3_N:data[2].Measurements.Inv_Phase_Volt_CN,\n       Volts_L2_N:data[2].Measurements.Inv_Phase_Volt_BN,\n       Volts_L1_N:data[2].Measurements.Inv_Phase_Volt_AN,\n       Volts_L1_L3:data[2].Measurements.Inv_Line_Volt_CA,\n       Volts_L2_L3:data[2].Measurements.Inv_Line_Volt_BC,\n       Volts_L1_L2:data[2].Measurements.Inv_Line_Volt_AB,\n       Amps_L3_N:data[2].Measurements.Inv_Amps_C,\n       Amps_L2_N:data[2].Measurements.Inv_Amps_B,\n       Amps_L1_N:data[2].Measurements.Inv_Amps_A,\n       Amps_A:data[2].Measurements.Inv_Total_A,\n       Gnd_Fault_Alarm:data[2].Measurements.Inv_Ground_Fault,\n       DC_over_voltage_Alarm:data[2].Measurements.Inv_DC_over_voltage,\n       AC_disconnect_open_Alarm:data[2].Measurements.Inv_AC_disconnect,\n       DC_disconnect_open_Alarm:data[2].Measurements.Inv_DC_disconnect,\n       Grid_shutdown_Alarm:data[2].Measurements.Inv_Grid_shutdown,\n       Cabinet_open_Alarm:data[2].Measurements.Inv_Cabinet_open,\n       Manual_shutdown_Alarm:data[2].Measurements.Inv_Manual_shutdown,\n       Over_temperature_Alarm:data[2].Measurements.Inv_Over_temperature,\n       Frequency_above_limit_Alarm:data[2].Measurements.Inv_Hz_above_lmt,\n       Frequency_under_limit_Alarm:data[2].Measurements.Inv_Hz_under_lmt,\n       AC_Voltage_above_limit_Alarm:data[2].Measurements.Inv_AC_V_above_lmt,\n       AC_Voltage_under_limit_Alarm:data[2].Measurements.Inv_AC_V_under_lmt,\n       Blown_String_fuse_Alarm:data[2].Measurements.Inv_Stringfuse,\n       Under_temperature_Alarm:data[2].Measurements.Inv_Under_temp,\n       Generic_Memory_or_Comm_error_Alarm:data[2].Measurements.Inv_Comm_Error,\n       Hardware_test_failure_Alarm:data[2].Measurements.Inv_Hardwaretest_fail,\n       Off_Event:data[2].Measurements.Inv_Off,\n       Sleeping_Event:data[2].Measurements.Inv_Sleeping,\n       Starting_Event:data[2].Measurements.Inv_Starting,\n       MPPT_Event:data[2].Measurements.Inv_MPPT,\n       Throttled_Event:data[2].Measurements.Inv_Throttled,\n       Shutting_down_Event:data[2].Measurements.Inv_Shutting_down,\n       Fault_Alarm:data[2].Inv_Fault,\n       Generating_Mode:tt.INV3_GEN_MODE,\n       \n   }\n},{\n    deviceName: 'Durtek_Device',\n   deviceType: 'Inverter',\n   telemetry: {\n       INV_Total_Power:(data[0].Measurements.Inv_Active_Power_W + data[1].Measurements.Inv_Active_Power_W + data[2].Measurements.Inv_Active_Power_W) ,\n       CUF_AC : ((data[0].Measurements.Inv_Active_Power_W + data[1].Measurements.Inv_Active_Power_W + data[2].Measurements.Inv_Active_Power_W) / (365*24*300))*100,\n       CUF_DC : ((data[0].Measurements.Inv_Active_Power_W + data[1].Measurements.Inv_Active_Power_W + data[2].Measurements.Inv_Active_Power_W) / (365*24*300))*100,\n       AVG_Volt_Line : (data[0].Measurements.Inv_Line_Volt_BC + data[1].Measurements.Inv_Line_Volt_BC + data[2].Measurements.Inv_Line_Volt_BC) / 3,\n       \n       \n       //INV_DailyEnergy_Total:(data[2].Measurements.SRILANKA300_Inverter_PV_Daily_Energy),\n    //SL_Load_Power:(data[0].Measurements.Inv_Active_Power_W + data[1].Measurements.Inv_Active_Power_W + data[2].Measurements.Inv_Active_Power_W)+ data[3].Measurements.SRILANKA300_Inverter_Grid_Power_kW + data[3].Measurements.SRILANKA300_Inverter_Generator_power,\n       //SL_Co2_Saving:(data[0].Measurements.SRILANKA300_Inverter_WattHours_WH + data[1].Measurements.SRILANKA300_Inverter_WattHours_WH + data[2].Measurements.SRILANKA300_Inverter_WattHours_WH)*0.82,\n       //SL_CUF:(data[3].Measurements.SRILANKA300_Inverter_PV_Total_Energy_kWh/2890800)*100,\n       //SL_INV_Load_Percent_kW:((data[0].Measurements.SRILANKA300_Inverter_Watts_W + data[1].Measurements.SRILANKA300_Inverter_Watts_W + data[2].Measurements.SRILANKA300_Inverter_Watts_W)/((data[0].Measurements.SRILANKA300_Inverter_Watts_W + data[1].Measurements.SRILANKA300_Inverter_Watts_W + data[2].Measurements.SRILANKA300_Inverter_Watts_W)+ (data[3].Measurements.SRILANKA300_Inverter_Grid_Power_kW + data[3].Measurements.SRILANKA300_Inverter_Generator_power)))*100,\n       //SL_DG_Load_Percent_kW:(data[3].Measurements.SRILANKA300_Inverter_Generator_power/(data[0].Measurements.SRILANKA300_Inverter_Watts_W + data[1].Measurements.SRILANKA300_Inverter_Watts_W + data[2].Measurements.SRILANKA300_Inverter_Watts_W + data[3].Measurements.SRILANKA300_Inverter_Grid_Power_kW + data[3].Measurements.SRILANKA300_Inverter_Generator_power))*100,\n       //SL_Grid_Percent_kW:(data[3].Measurements.SRILANKA300_Inverter_Grid_Power_kW /(data[0].Measurements.SRILANKA300_Inverter_Watts_W + data[1].Measurements.SRILANKA300_Inverter_Watts_W + data[2].Measurements.SRILANKA300_Inverter_Watts_W + data[3].Measurements.SRILANKA300_Inverter_Grid_Power_kW + data[3].Measurements.SRILANKA300_Inverter_Generator_power))*100,\n       //Sp_Yild_Durtek:data[3].Measurements.SRILANKA300_Inverter_PV_Daily_Energy/330,\n       //INV_Total_Energy_kWh:data[3].Measurements.SRILANKA300_Inverter_PV_Total_Energy_kWh,\n       //SL_INV_GENERATING_MODE:((tt.INV1_GEN_MODE + tt.INV2_GEN_MODE + tt.INV3_GEN_MODE)/3)*100,\n       //SL_INV_COMM_FAIL_MODE:((yy.INV1_com_fail + yy.INV2_com_fail + yy.INV3_com_fail)/3)*100,\n       //SL_INV_FAULT_MODE:((zz.INV1_Fault + zz.INV2_Fault + zz.INV1_Fault)/3)*100,\n       \n       \n   }\n },\n {deviceName: 'cal',deviceType:'inv_agg',\n  // telemetry: {SL_PV_Daily_Energy:data[3].Measurements.SRILANKA300_Inverter_PV_Daily_Energy,\n  // SL_INV_Total_Power:(data[0].Measurements.SRILANKA300_Inverter_Watts_W + data[1].Measurements.SRILANKA300_Inverter_Watts_W + data[2].Measurements.SRILANKA300_Inverter_Watts_W)\n  // }\n     \n }];\n\n\n/** Helper functions 'decodeToString' and 'decodeToJson' are already built-in **/\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null,
      "updateOnlyKeys" : [ "manufacturer" ]
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "c91e3270-1d85-11ef-982c-0f5367becb87"
    },
    "name" : "Uplink data converter for MQTT integration SRILANKA 300 KW",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}