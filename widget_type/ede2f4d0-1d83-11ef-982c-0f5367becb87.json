{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "card1",
    "name" : "card1",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "timeseries",
      "sizeX" : 8,
      "sizeY" : 5,
      "resources" : [ ],
      "templateHtml" : "<section>\r\n    <div id=\"header\">\r\n        <div id=\"logo\">\r\n            <img src=\"/api/images/public/Amr5zjceuGVKQSysthpU18jVdmxtMxFD\" alt=\"solar\" style=\"height:50px; width:50px;\" >\r\n        </div>\r\n        <div id=\"dot\"><b>Solar</b></div>\r\n    </div>\r\n    <div id='btn'>\r\n        <button type=\"button\" id=\"daily1\" onclick=\"daily1()\" class=\"active\">Daily</button>\r\n        <button type=\"button\" id=\"monthly1\" onclick=\"monthly1()\">Monthly</button>\r\n        <button type=\"button\" id=\"yearly1\" onclick=\"yearly1()\">Yearly</button>\r\n    </div>\r\n    \r\n    <!--<div class=\"data-container\" fxFlex fxLayout=\"column\" style=\"height: 100%;\" fxLayoutAlign=\"center stretch\">-->\r\n    <!--    <div class=\"data-row\" fxFlex fxLayout=\"row\" *ngFor=\"let dataKeyData of data\" fxLayoutAlign=\"space-between center\">-->\r\n    <!--        <div class=\"data-key\" >{{ dataKeyData.dataKey.label }}:</div>-->\r\n    <!--        <div class=\"data-value\">{{ dataKeyData.data[0] && dataKeyData.data[0][1] }}</div>-->\r\n    <!--    </div>-->\r\n    <!--</div>-->\r\n    \r\n    <div class=\"data-container\">\r\n    <div class=\"data-row\" *ngFor=\"let dataKeyData of data\">\r\n        <div class=\"data-key\">{{ dataKeyData.dataKey.label }}:</div>\r\n        <div class=\"data-value\">{{ dataKeyData.data[0] && dataKeyData.data.slice(-1)[0][1] | number:'1.2-2' }}</div>\r\n    </div>\r\n</div>\r\n\r\n<div class='data-table'></div>\r\n<div class='data-table'></div>\r\n    \r\n</section>",
      "templateCss" : "    section {\r\n        margin: auto;\r\n        padding: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: 1px solid #999; \r\n        border-radius: 5px;\r\n        overflow-y: auto;\r\n    }\r\n    #header {\r\n        margin: auto;\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: 90%;\r\n    }\r\n    #dot {\r\n        /*height: 12px;*/\r\n        /*width: 12px;*/\r\n        /*border-radius: 50%;*/\r\n        /*background: green;*/\r\n        color: black;\r\n    }\r\n    #btn {\r\n        margin: auto;\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        border-top: 1px solid #999;\r\n        border-bottom:1px solid #999 ;\r\n    }\r\n\r\n    button {\r\n        flex-grow: 1;\r\n        padding: 10px 0;\r\n        border: none;\r\n        cursor: pointer;\r\n        background: transparent;\r\n        letter-spacing: 1px;\r\n        position: relative;\r\n        outline: none;\r\n    }\r\n     .active:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: -1px;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 2px;\r\n        border: none;\r\n        border-bottom: 2px solid blue;\r\n    }\r\n\r\n    .data-container, .data-table {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 10px;\r\n    }\r\n\r\n    .data-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 2px;\r\n        line-height: 20px;\r\n    }\r\n\r\n    .data-key {\r\n        margin-right: 5px;\r\n        color: #666;\r\n        align-content: flex-start;\r\n    }\r\n    \r\n    .data-value {\r\n        color: green;\r\n        align-content: flex-end;\r\n        font-weight: 600;\r\n    }\r\n    @media (min-height: 400px) {\r\n        .data-row {\r\n            font-size: 12px; /* Adjust font size */\r\n            margin-bottom: 2px; /* Adjust margin */\r\n        }\r\n    }",
      "controllerScript" : "    self.onInit = function() {\r\n        self.ctx.$scope.data = self.ctx.defaultSubscription.data;\r\n        // var cust = self.ctx.currentUser.customerId;\r\n        \r\n        var Dbid = window.location.href;\r\n        var z = Dbid.split('/');\r\n        z.reverse();\r\n        console.log(\"z\", z[0].substring(0,36), z);\r\n        var id = z[0].substring(0,36);\r\n            daily1();\r\n            solarAPI('month', 0, id);\r\n            solarAPI('year', 1, id);\r\n        // const regex = /(?:dashboard|dashboards\\/all)\\/([a-f0-9-]+)/;\r\n        // const match = Dbid.match(regex);\r\n        \r\n        // if (match) {\r\n        //   const id = match[1]; // Outputs: f23698d0-1e86-11ef-982c-0f5367becb87\r\n        // } else {\r\n        //   console.log(\"ID not found\");\r\n        // }\r\n        \r\n        \r\n    };\r\n\r\n    self.onDataUpdated = function() {\r\n        self.ctx.detectChanges();\r\n    };\r\n\r\n    daily1 = function() {\r\n        document.getElementById(\"daily1\").classList.add(\r\n            \"active\");\r\n        document.getElementById(\"monthly1\").classList\r\n            .remove(\"active\");\r\n        document.getElementById(\"yearly1\").classList\r\n            .remove(\"active\");\r\n            \r\n        document.getElementsByClassName('data-table')[0].style.display = \"none\";\r\n        document.getElementsByClassName('data-table')[1].style.display = \"none\";\r\n        document.getElementsByClassName('data-container')[0].style.display = \"flex\";\r\n\r\n        // self.ctx.timewindowFunctions.onResetTimewindow()\r\n\r\n        self.ctx.timewindowFunctions.onResetTimewindow();\r\n\r\n    };\r\n\r\n    monthly1 = function() {\r\n        // self.ctx.timewindowFunctions.onResetTimewindow()\r\n        document.getElementById(\"daily1\").classList\r\n            .remove(\"active\");\r\n        document.getElementById(\"monthly1\").classList\r\n            .add(\"active\");\r\n        document.getElementById(\"yearly1\").classList\r\n            .remove(\"active\");\r\n            \r\n        document.getElementsByClassName('data-table')[1].style.display = \"none\";\r\n        document.getElementsByClassName('data-container')[0].style.display = \"none\";\r\n        document.getElementsByClassName('data-table')[0].style.display = \"block\";\r\n        \r\n        // solarAPI('month');\r\n        \r\n    };\r\n    \r\n    yearly1 = function() {\r\n        // self.ctx.timewindowFunctions.onResetTimewindow();\r\n        document.getElementById(\"daily1\").classList\r\n            .remove(\"active\");\r\n        document.getElementById(\"monthly1\").classList\r\n            .remove(\"active\");\r\n        document.getElementById(\"yearly1\").classList\r\n            .add(\"active\");\r\n\r\n        document.getElementsByClassName('data-table')[0].style.display = \"none\";\r\n        document.getElementsByClassName('data-container')[0].style.display = \"none\";\r\n        document.getElementsByClassName('data-table')[1].style.display = \"block\";\r\n        \r\n        // solarAPI('year');\r\n    };\r\n    \r\n    solarAPI = function (diff, no, id) {\r\n        \r\n        var rows = \" \";\r\n        var update = document.getElementsByClassName('data-table')[no];\r\n            update.innerHTML = \" \";\r\n        \r\n        var label = [];\r\n        var keys = \"\";\r\n        var dashboardId = id;\r\n        var customer = self.ctx.currentUser.customerId;\r\n        var dif = diff;\r\n        \r\n        self.ctx.data.forEach(elem => {\r\n            label.push(elem.dataKey.label, elem.dataKey.name);\r\n            keys = keys + \",'\" + elem.dataKey.name+\"'\";\r\n        });\r\n            \r\n        // console.log(keys, label);\r\n            \r\n        var query = `SELECT * FROM fn_get_SolarCard ('${dashboardId}','${customer}','${dif}' ${keys})`; \r\n        var url = \"https://api.cogneta.cloud/api/sql/\"+query;\r\n        \r\n        fetch(encodeURI(url))\r\n        .then(res => res.json())\r\n        .then(result => {\r\n                var result_set = mapKeysToLabelsArray(result.rows, label);\r\n                solarHtmlRow(result_set, label, update);\r\n            }) \r\n        .catch(console.error);\r\n    };\r\n    \r\n    solarHtmlRow = function (result_set, label, update) {\r\n        \r\n        // console.log(result_set[0], result_set, update);\r\n        \r\n        for (var i = 0; i < result_set.length; i += 2) {\r\n            var rows = '<div class=\"data-row\"><div class=\"data-key\">' + result_set[i] + ':</div><div class=\"data-value\">' + result_set[i + 1] + '</div></div>';\r\n            update.innerHTML += rows;\r\n        }\r\n    };\r\n    \r\n    mapKeysToLabelsArray = function (data, keysAndLabels) {\r\n        var result = [];\r\n\r\n        // Create a mapping of keys to labels\r\n        var keyLabelMap = {};\r\n        for (var i = 0; i < keysAndLabels.length; i += 2) {\r\n            if(keysAndLabels[i] != \"PV Lifetime Generation MWh\") {\r\n                keyLabelMap[keysAndLabels[i + 1]] = keysAndLabels[i];\r\n            }\r\n        }\r\n        \r\n        \r\n        // Map each key in the data to its corresponding label and value\r\n        data.forEach(item => {\r\n            var label = keyLabelMap[item.key_1];\r\n            if (label) {\r\n                result.push(label);\r\n                result.push(item.result_set);\r\n            }\r\n        });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    \r\n    ",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}",
      "latestDataKeySettingsSchema" : "{}",
      "settingsDirective" : "tb-flot-line-widget-settings",
      "dataKeySettingsDirective" : "tb-flot-line-key-settings",
      "latestDataKeySettingsDirective" : "tb-flot-latest-key-settings",
      "hasBasicMode" : true,
      "basicModeDirective" : "tb-flot-basic-config",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"showLines\":true,\"fillLines\":true,\"showPoints\":false},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#ffc107\",\"settings\":{\"showLines\":true,\"fillLines\":false,\"showPoints\":false},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0\",\"settings\":{\"stack\":false,\"fontSize\":10,\"fontColor\":\"#545454\",\"showTooltip\":true,\"tooltipIndividual\":false,\"tooltipCumulative\":false,\"hideZeros\":false,\"grid\":{\"verticalLines\":true,\"horizontalLines\":true,\"outlineWidth\":1,\"color\":\"#545454\",\"backgroundColor\":null,\"tickColor\":\"#DDDDDD\"},\"xaxis\":{\"title\":null,\"showLabels\":true,\"color\":\"#545454\"},\"yaxis\":{\"min\":null,\"max\":null,\"title\":null,\"showLabels\":true,\"color\":\"#545454\",\"tickSize\":null,\"tickDecimals\":0,\"ticksFormatter\":\"\"},\"shadowSize\":4,\"smoothLines\":false,\"comparisonEnabled\":false,\"xaxisSecond\":{\"axisPosition\":\"top\",\"title\":null,\"showLabels\":true},\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"bottom\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"customLegendEnabled\":false},\"title\":\"card1\",\"dropShadow\":false,\"enableFullscreen\":false,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"configMode\":\"advanced\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\",\"enableDataExport\":false,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "ede2f4d0-1d83-11ef-982c-0f5367becb87"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}