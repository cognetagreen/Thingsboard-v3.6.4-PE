{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "comb1",
    "name" : "comb1",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 4.5,
      "resources" : [ {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/CSSRulePlugin.min.js"
      } ],
      "templateHtml" : "        <div class=\"container\" *ngIf=\"data\">\n            <div class=\"circle-container red\">\n                <div class=\"circle\">\n                    <img src=\"/api/images/public/Amr5zjceuGVKQSysthpU18jVdmxtMxFD\" class=\"responsive-img\" alt=\"solar\">\n                </div>\n                <div class=\"value top\">{{(data[0] && data[0][\"data\"][0][1]) | number:'1.2-2' }} kW</div>\n                <!--<div class=\"label\">Solar</div>-->\n            </div>\n            <div class=\"circle-container yellow\">\n                <div class=\"circle\">\n                    <img src=\"/api/images/public/y2jr1selEiDnZHJLpEw4ZqN3lw0On6Ev\" alt=\"Image 2\">\n                </div>\n                <div class=\"value top\">{{(data[1] && data[1][\"data\"][0][1]) | number:'1.2-2' }} kW</div>\n                <!--<div class=\"label\">DG</div>-->\n            </div>\n            <div class=\"circle-container green\">\n                <div class=\"circle\">\n                    <img src=\"/api/images/public/kJ3wd2LimOTUXQG21BbrNCdvBBoQrgR4\" alt=\"Image 4\">\n                </div>\n                <div class=\"value top\">{{(data[3] && data[3][\"data\"][0][1]) | number:'1.2-2' }} kW</div>\n                <!--<div class=\"label\">Grid</div>-->\n            </div>\n            <div class=\"circle-container center\">\n                <div class=\"circle\">\n                    <img src=\"/api/images/public/hIUvFsRyNDFVbhO6LtLs9ZnCNQ8SeCD8\" alt=\"Image 3\" style=\"width:120%; height: 120%;\">\n                </div>\n                <div class=\"value top\" id=\"sum\">{{(data[2] && data[2][\"data\"][0][1]) | number:'1.2-2' }} kW</div>\n                <!--<div class=\"label\">Center</div>-->\n            </div>\n            <svg class=\"lines\" xmlns=\"http://www.w3.org/2000/svg\">\n                <line id=\"line1\" x1=\"50%\" y1=\"55%\" x2=\"20%\" y2=\"25%\" />\n                <line id=\"line2\" x1=\"50%\" y1=\"55%\" x2=\"20%\" y2=\"87%\" />\n                <line id=\"line3\" x1=\"50%\" y1=\"55%\" x2=\"80%\" y2=\"55%\" />\n            <!--    <path id=\"path1\" d=\"M50 55 L20 25\" />-->\n            <!--<path id=\"path2\" d=\"M50 55 L20 87\" />-->\n            <!--<path id=\"path3\" d=\"M50 55 L80 55\" />-->\n                <circle id=\"circle1\" cx=\"50%\" cy=\"55%\" r=\"5\" fill=\"#027507\"/>\n                <circle id=\"circle2\" cx=\"50%\" cy=\"55%\" r=\"5\" fill=\"#048AD3\"/>\n                <circle id=\"circle3\" cx=\"50%\" cy=\"55%\" r=\"5\" fill=\"#C5E1A4\"/>\n            </svg>\n            <div class=\"box\"></div>\n        </div>",
      "templateCss" : ".container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.circle-container {\r\n    position: absolute;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    z-index: 10;\r\n}\r\n\r\n.circle {\r\n    width: 70px;\r\n    height: 70px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    border: 5px solid #bbbbbb;\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n}\r\n\r\n.circle img {\r\n    width: 80%;\r\n    height: 70%;\r\n    object-fit: cover;\r\n}\r\n\r\n.value {\r\n    font-size: 12px;\r\n    margin: 3px 0;\r\n}\r\n\r\n.value.top {\r\n    order: -1;\r\n}\r\n\r\n.label {\r\n    font-size: 14px;\r\n    margin-top: 5px;\r\n}\r\n\r\n.red {\r\n    top: 6% ;\r\n    left: 19%;\r\n}\r\n\r\n.red .circle {\r\n    border-top: 5px solid #027507;\r\n}\r\n\r\n.yellow {\r\n    bottom:5%;\r\n    left: 19%;\r\n}\r\n\r\n.yellow .circle {\r\n    border-bottom: 5px solid #048AD3;\r\n}\r\n\r\n.green {\r\n    top: 30%;\r\n    right: 12%;\r\n}\r\n\r\n.green .circle {\r\n    border-right: 5px solid #C5E1A4;\r\n}\r\n\r\n.center {\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.center .circle {\r\n    border-left: 5px solid yellow;\r\n}\r\n\r\n.lines {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 5;\r\n}\r\n\r\nline {\r\n    stroke: #999;\r\n    stroke-width: 2;\r\n    stroke-linecap: round;\r\n}\r\ncircle {\r\n    r: 5;\r\n}\r\n#circle1, #circle2, #circle3 {\r\n    box-shadow: 5px 0px 20px 5px #048AD3;\r\n}",
      "controllerScript" : "    \r\n    \r\n    self.onInit = function() {\r\n      self.ctx.$scope.data = self.ctx.defaultSubscription.data;\r\n        \r\n    }\r\n        \r\n    self.onDataUpdated = function() {\r\n        self.ctx.detectChanges();\r\n        \r\n        var sc1 = document.getElementById(\"circle1\");\r\n        var sc2 = document.getElementById(\"circle2\");\r\n        var sc3 = document.getElementById(\"circle3\");\r\n        console.log(sc2);\r\n        var sum = 0;\r\n        var arr = [];\r\n        for(var i = 0; i < self.ctx.data.length; i++) {\r\n            if(i!=2){\r\n                self.ctx.data[i].data.forEach((elem) => {\r\n                    sum += +elem[1];\r\n                    arr.push(elem[1]);\r\n                    if(i==0 && elem[1]<=0){\r\n                        sc1.style.display = \"none\";\r\n                    }\r\n                    else if(i==0 && elem[1] > 0){\r\n                        sc1.style.display = \"block\";\r\n                        gsap.fromTo(\"#circle1\", {\r\n                            x:-145,\r\n                            y:-55,\r\n                        }, {\r\n                            y: 0,\r\n                            x: 0,\r\n                            duration: 2,\r\n                            repeat:-1,\r\n                            ease: \"power1.out\"\r\n                        });\r\n                    }\r\n                    if(i==1 && elem[1] <= 0){\r\n                        sc2.style.display = \"none\";\r\n                    }\r\n                    else if(i==1 && elem[1] > 0){\r\n                        sc2.style.display = \"block\";\r\n                        gsap.fromTo(\"#circle2\", {\r\n                            x:-145,\r\n                            y:55\r\n                        }, {\r\n                            y: 0,\r\n                            x: 0,\r\n                            repeat:-1,\r\n                            duration: 2,\r\n                            ease: \"power1.out\"\r\n                        });\r\n                    }\r\n                    if(i==3 && elem[1] == 0){\r\n                        sc3.style.display = \"none\";\r\n                    }\r\n                    else if(i==3 && elem[1] > 0){\r\n                        sc3.style.display = \"block\";\r\n                        sc3.style.fill = \"#C5E1A4\";\r\n                        gsap.fromTo(\"#circle3\",{\r\n                            x:200,\r\n                            y:0\r\n                        }, {\r\n                            y: 0,\r\n                            x: 0,\r\n                            repeat:-1,\r\n                            duration: 2,\r\n                            ease: \"power1.out\"\r\n                        });\r\n                    }\r\n                    else if(i==3 && elem[1] < 0 && arr[0] > 0) {\r\n                        sc3.style.display = \"block\";\r\n                        sc3.style.fill = \"#027507\";\r\n                        gsap.fromTo(\"#circle3\",{\r\n                            x:0,\r\n                            y:0\r\n                        }, {\r\n                            y: 0,\r\n                            x: 120,\r\n                            repeat:-1,\r\n                            duration: 2,\r\n                            ease: \"power1.out\"\r\n                        });\r\n                    }\r\n                    \r\n                });\r\n            }\r\n        }\r\n        console.log(sum)\r\n        document.getElementById(\"sum\").innerHTML = sum.toFixed(2) + \" kW\"\r\n\r\n    }\r\n",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random 2\",\"color\":\"#4caf50\",\"settings\":{},\"_hash\":0.8088811993350675,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random 3\",\"color\":\"#f44336\",\"settings\":{},\"_hash\":0.8149001069154764,\"funcBody\":\"var value = prevValue + Math.random() * 100 + 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.abs((value * multiplier) / multiplier);\\nif (value < -1000) {\\n\\tvalue = Math.abs(-1000);\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn Math.abs(value);\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random 4\",\"color\":\"#ffc107\",\"settings\":{},\"_hash\":0.8410678502731261,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}],\"alarmFilterConfig\":{\"statusList\":[\"ACTIVE\"]}}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"comb1\",\"useDashboardTimewindow\":true,\"displayTimewindow\":true,\"dropShadow\":true,\"enableFullscreen\":true,\"enableDataExport\":false,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "d8930610-1d83-11ef-982c-0f5367becb87"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}