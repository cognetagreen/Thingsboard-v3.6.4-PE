{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "card2",
    "name" : "card2",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "timeseries",
      "sizeX" : 8.5,
      "sizeY" : 6,
      "resources" : [ ],
      "templateHtml" : "<section>\r\n    <div id=\"header\">\r\n        <div id=\"logo\">\r\n            pic &nbsp; <b>Solar</b>\r\n        </div>\r\n        <div id=\"dot\"></div>\r\n    </div>\r\n    <div id='btn'>\r\n        <button type=\"button\" id=\"daily\" onclick=\"daily()\" class=\"active\">Daily</button>\r\n        <button type=\"button\" id=\"monthly\" onclick=\"monthly()\">History</button>\r\n    </div>\r\n    \r\n    <div class=\"data-container\" fxFlex fxLayout=\"column\" style=\"height: 100%;\" fxLayoutAlign=\"center stretch\">\r\n        <div class=\"data-row\" fxFlex fxLayout=\"row\" *ngFor=\"let dataKeyData of data\" fxLayoutAlign=\"space-between center\">\r\n            <div class=\"data-key\" >{{ dataKeyData.dataKey.label }}:</div>\r\n            <!--<div>{{ (dataKeyData.data[0] && dataKeyData.data[0][0]) | date : 'yyyy-MM-dd HH:mm:ss' }}</div>-->\r\n            <div class=\"data-value\">{{ dataKeyData.data[0] && dataKeyData.data[0][1] }}</div>\r\n        </div>\r\n    </div>\r\n</section>",
      "templateCss" : "    section {\r\n        margin: auto;\r\n        padding: 0;\r\n        width: 100%;\r\n        /*height: max-height;*/\r\n        border: 1px solid #03045e; \r\n        border-radius: 5px;\r\n        background: #03045e;\r\n    }\r\n    #header {\r\n        margin: auto;\r\n        padding: 20px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 90%;\r\n        color: white;\r\n    }\r\n    #dot {\r\n        height: 12px;\r\n        width: 12px;\r\n        border-radius: 50%;\r\n        background: #90e0ef;\r\n    }\r\n    #btn {\r\n        margin: auto;\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        border-top: 1px solid #caf0f8;\r\n        border-bottom:1px solid #caf0f8 ;\r\n    }\r\n\r\n    button {\r\n        flex-grow: 1;\r\n        padding: 10px 0;\r\n        color: white;\r\n        border: none;\r\n        cursor: pointer;\r\n        background: transparent;\r\n        letter-spacing: 1px;\r\n        position: relative;\r\n        outline: none;\r\n    }\r\n     .active:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: -1px;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 2px;\r\n        border: none;\r\n        border-bottom: 2px solid #76c893;\r\n    }\r\n\r\n    .data-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 5px;\r\n        padding: 10px; /* Add padding for better spacing */\r\n        max-height: 400px; /* Set maximum height */\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n    }\r\n\r\n    .data-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 5px;\r\n        /*font-size: 12px;*/\r\n    }\r\n\r\n    .data-key {\r\n        margin-right: 5px;\r\n        color: #64dfdf;\r\n        align-content: flex-start;\r\n    }\r\n    \r\n    .data-value {\r\n        color: #90e0ef;\r\n        align-content: flex-end;\r\n    }\r\n    \r\n    @media (max-height: 500px) {\r\n        .data-row {\r\n            font-size: 14px; /* Adjust font size */\r\n            margin-bottom: 2px; /* Adjust margin */\r\n        }\r\n    }\r\n    @media (max-height: 400px) {\r\n        .data-row {\r\n            font-size: 10px; /* Adjust font size */\r\n            margin-bottom: 2px; /* Adjust margin */\r\n        }\r\n    }",
      "controllerScript" : "    \r\n    \r\n    self.onInit = function() {\r\n       self.ctx.$scope.data = self.ctx.defaultSubscription.data;\r\n       \r\n        self.ctx.timewindowFunctions.onResetTimewindow();\r\n    \r\n\r\n    }\r\n        \r\n    self.onDataUpdated = function() {\r\n        self.ctx.detectChanges();\r\n\r\n    }\r\n    \r\n      daily = function(){\r\n        self.ctx.timewindowFunctions.onResetTimewindow();\r\n        document.getElementById(\"daily\").classList.add(\"active\");\r\n        document.getElementById(\"monthly\").classList.remove(\"active\");\r\n\r\n        // self.ctx.timewindowFunctions.onResetTimewindow()\r\n        \r\n        self.ctx.widgetConfig.displayTimewindow = false\r\n        self.ctx.widgetConfig.timewindow.realtime.interval = 1000\r\n        self.ctx.widgetConfig.timewindow.realtime.timewindowMs = 120000\r\n        self.ctx.dashboardService.saveDashboard\r\n        self.ctx.updateWidgetParams();\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n    monthly = function() {\r\n         document.getElementById(\"daily\").classList.remove(\"active\");\r\n        document.getElementById(\"monthly\").classList.add(\"active\");\r\n//         var dataRows = document.getElementsByClassName(\"data-row\");\r\n// for (var i = 0; i < dataRows.length; i++) {\r\n//     dataRows[i].style.fontSize = \"10px\";\r\n// }\r\n\r\n        // self.ctx.timewindowFunctions.onResetTimewindow();\r\n        // self.ctx.widgetConfig.timewindow.realtime.interval = 5000\r\n        // self.ctx.widgetConfig.timewindow.realtime.timewindowMs = 60000\r\n        // var currentDate = new Date().getTime();\r\n        // var lastMonth = currentDate - 2592000000\r\n        // self.ctx.timewindowFunctions.onUpdateTimewindow(lastMonth, currentDate,2592000000)\r\n        // self.ctx.widgetConfig.useDashboardTimewindow = true\r\n        self.ctx.widgetConfig.displayTimewindow = true\r\n        self.ctx.dashboardService.saveDashboard\r\n        self.ctx.updateWidgetParams();\r\n    }\r\n    ",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}",
      "latestDataKeySettingsSchema" : "{}",
      "settingsDirective" : "tb-flot-line-widget-settings",
      "dataKeySettingsDirective" : "tb-flot-line-key-settings",
      "latestDataKeySettingsDirective" : "tb-flot-latest-key-settings",
      "hasBasicMode" : true,
      "basicModeDirective" : "tb-flot-basic-config",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"showLines\":true,\"fillLines\":true,\"showPoints\":false},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#ffc107\",\"settings\":{\"showLines\":true,\"fillLines\":false,\"showPoints\":false},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Third\",\"color\":\"#f44336\",\"settings\":{},\"_hash\":0.6197978165526716,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"decimals\":0,\"aggregationType\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Fourth\",\"color\":\"#ffc107\",\"settings\":{},\"_hash\":0.19724820290222156,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"decimals\":0,\"aggregationType\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Fifth\",\"color\":\"#607d8b\",\"settings\":{},\"_hash\":0.7616175350228493,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"decimals\":0,\"aggregationType\":null,\"usePostProcessing\":null,\"postFuncBody\":null}]}],\"timewindow\":{\"hideInterval\":false,\"hideLastInterval\":false,\"hideQuickInterval\":false,\"hideAggregation\":false,\"hideAggInterval\":false,\"hideTimezone\":false,\"selectedTab\":0,\"realtime\":{\"realtimeType\":0,\"timewindowMs\":60000,\"quickInterval\":\"CURRENT_DAY\",\"interval\":1000},\"aggregation\":{\"type\":\"AVG\",\"limit\":50000}},\"showTitle\":false,\"backgroundColor\":\"#FFFFFF0C\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"stack\":false,\"fontSize\":10,\"fontColor\":\"#545454\",\"showTooltip\":true,\"tooltipIndividual\":false,\"tooltipCumulative\":false,\"hideZeros\":false,\"grid\":{\"verticalLines\":true,\"horizontalLines\":true,\"outlineWidth\":1,\"color\":\"#545454\",\"backgroundColor\":null,\"tickColor\":\"#DDDDDD\"},\"xaxis\":{\"title\":null,\"showLabels\":true,\"color\":\"#545454\"},\"yaxis\":{\"min\":null,\"max\":null,\"title\":null,\"showLabels\":true,\"color\":\"#545454\",\"tickSize\":null,\"tickDecimals\":0,\"ticksFormatter\":\"\"},\"shadowSize\":4,\"smoothLines\":false,\"comparisonEnabled\":false,\"xaxisSecond\":{\"axisPosition\":\"top\",\"title\":null,\"showLabels\":true},\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"bottom\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"customLegendEnabled\":false},\"title\":\"card2\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"configMode\":\"advanced\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\",\"useDashboardTimewindow\":false,\"displayTimewindow\":false,\"titleFont\":null,\"titleColor\":null,\"enableDataExport\":true}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "edf878a0-1d83-11ef-982c-0f5367becb87"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}