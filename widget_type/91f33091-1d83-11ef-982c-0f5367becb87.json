{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "exporttable",
    "name" : "exportTable",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "timeseries",
      "sizeX" : 8,
      "sizeY" : 6,
      "resources" : [ {
        "url" : "https://cdn.jsdelivr.net/npm/gridjs/dist/gridjs.umd.js"
      }, {
        "url" : "https://cdn.jsdelivr.net/npm/gridjs/dist/theme/mermaid.min.css"
      }, {
        "url" : "https://unpkg.com/gridjs/dist/theme/mermaid.min.css"
      }, {
        "url" : "https://unpkg.com/jquery/dist/jquery.min.js"
      }, {
        "url" : "https://unpkg.com/gridjs-jquery/dist/gridjs.production.min.js"
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js",
        "isModule" : false
      }, {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"
      } ],
      "templateHtml" : "<button type=\"button\" id=\"export-pdf\" onclick=\"exportpdf()\">Export to PDF</button>\r\n<button type=\"button\" id=\"export-csv\" onclick=\"exportcsv()\">Export to CSV</button>\r\n<section id=\"report1\">\r\n        <div id=\"report-header\">\r\n            <div id=\"report-logo\">\r\n                <img src=\"https://t3.ftcdn.net/jpg/04/09/90/58/360_F_409905897_Egc9Q5nRaS4n0OinSdQE7WdT4tW3czOg.jpg\" alt=\"solar\" style=\"height:50px;width:50px\">\r\n            </div>\r\n            <div id=\"report-dot\"><b>Process Report</b></div>\r\n            \r\n        </div>\r\n        <div id =\"report-info\">\r\n            <b>Client Name:-</b> <span> Aa-Bb-Cc</span><br>\r\n            <b>Manufactured By:-</b> <span> A-B-C</span><br>\r\n            <b>Print Interval:-</b> <span> x-y-z</span><br>\r\n            <b>Equipment Name:-</b> <span> p-q-r</span><br>\r\n            \r\n        </div>\r\n        <div id=\"report-wrapper\">\r\n            <!-- Your report content goes here -->\r\n            <!-- For demonstration, let's add some content -->\r\n            <p>This is the content of the report.</p>\r\n            <p>You can add more elements as needed.</p>\r\n        </div>\r\n    </section>\r\n    \r\n    <button id=\"export-pdf\">Export to PDF</button>",
      "templateCss" : "    #report1 {\n        margin: 0;\n        padding: 0;\n    }\n    #report-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        border: 1px solid #999;\n    }\n    #report-dot {\n        color: #000;\n        padding-right: 10px;\n    }\n    #report-info {\n        width: 100%;\n        font-size: 14px;\n        font-weight: 500;\n        border: 1px solid #999;\n        border-top: none;\n        padding: 10px;\n        letter-spacing: 1px;\n    }\n    #report-info b {\n        padding: 5px;\n    }\n    #report-info span{\n        color: #888;\n        font-style: italic;\n    }\n    .table {\n        border: 1px solid #999;\n        border-collapse: collapse;\n    }\n    .tr {\n        border: 1px solid #999;\n    }\n    .th {\n        background-color: rgba(0, 0, 0, 0.1);\n        color: #000;\n        border-bottom: 1px solid #ccc;\n        text-align: center;\n    }\n    .td {\n        text-align: center;\n    }\n    #report-wrapper {\n        height: 90%;\n        margin: -3px 0 0 0;\n        /*padding: 0 0 10px 0;*/\n    }\n",
      "controllerScript" : "//import { jsPDF } from \"jspdf\";\nself.onInit = function() {\n    var column = [\"TS\"];\n    var data = [];\n    for(var i=0; i < self.ctx.data.length ; i++){\n        data.push(self.ctx.data[i].data);\n        column.push(self.ctx.data[i].label);\n    }\n    \n    var grid = $(\"div#report-wrapper\").Grid({\n            pagination:true,\n            columns : column,\n            data : [],\n            className : {\n                table : \"table\",\n                tr : \"tr\",\n                th : \"th\",\n                td : \"td\"\n            }\n        });\n        \n    \n};\n\nself.onDataUpdated = function() {\n    var column = [\"TS\"];\n    var data = [];\n    for(var i=0; i < self.ctx.data.length ; i++){\n        column.push(self.ctx.data[i].dataKey.label);\n        if (i==0) {\n            data.push(self.ctx.data[i].data.map(elem => elem[0]));\n            data.push(self.ctx.data[i].data.map(elem => elem[1]));\n        }else{\n            data.push(self.ctx.data[i].data.map(elem => elem[1]));\n        }\n    }\n\n        var gridData = [];\n    if (data[0].length > 0) {\n        \n        for (var k = (data[0].length - 1); k >= 0; k--) {\n            var tempArray = [];\n            for (var j = 0; j < data.length; j++) {\n                tempArray.push(data[j][k]);\n            }\n            gridData.push(tempArray);\n        }\n    }\n    \n    // Prepare the updated data for the grid\n    $(\"div#report-wrapper\").empty();\n    var grid = $(\"div#report-wrapper\").Grid({\n        pagination: true,\n        columns : column,\n        data : gridData,\n        className : {\n            table : \"table\",\n            tr : \"tr\",\n            th : \"th\",\n            td : \"td\"\n        },\n    });\n    grid.forceRender();\n\n};\n\n\n   exportpdf = function() {\n            // var reportSection = document.getElementById('report1');\n\n            // html2canvas(reportSection).then(function(canvas) {\n            //     var imgData = canvas.toDataURL('image/png');\n            //     var imgWidth = 210; // A4 size\n            //     var imgHeight = canvas.height * imgWidth / canvas.width;\n            //     var jsPDF = window.jspdf.jsPDF;\n            //     var doc = new jsPDF();\n            //     doc.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n            //     doc.save('report.pdf');\n            // });\n            \n            var reportSection = document.getElementById('report1');\n\n    html2canvas(reportSection, {\n        onrendered: function(canvas) {\n            var imgData = canvas.toDataURL('image/png');\n            var imgWidth = 210; // A4 size\n            var imgHeight = canvas.height * imgWidth / canvas.width;\n            var jsPDF = window.jspdf.jsPDF;\n            // var doc = new jsPDF();\n            var doc = new jsPDF('p', 'mm', 'a4');\n            var scaleFactor = 1; // Adjust as needed\ndoc.addImage(imgData, 'PNG', 0, 0, imgWidth * scaleFactor, imgHeight * scaleFactor);\n\n            // doc.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n            // doc.setMargins(10, 10, 10, 10); // Set margins (top, left, bottom, right)\n\n            doc.save('report.pdf');\n        }\n    });\n            \n        }\n\nexportcsv = function() {\n    var table = document.querySelector('div#report-wrapper table');\n    var rows = table.querySelectorAll('tr');\n    var csv = [];\n    for (var i = 0; i < rows.length; i++) {\n        var row = [], cols = rows[i].querySelectorAll('td, th');\n        for (var j = 0; j < cols.length; j++) {\n            var data = cols[j].innerText.replace(/\"/g, '\"\"');\n            row.push('\"' + data + '\"');\n        }\n        csv.push(row.join(','));\n    }\n    var csvContent = csv.join('\\n');\n    var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    var url = URL.createObjectURL(blob);\n    var link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'report.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\n\n\n",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}",
      "latestDataKeySettingsSchema" : "{}",
      "settingsDirective" : "tb-flot-line-widget-settings",
      "dataKeySettingsDirective" : "tb-flot-line-key-settings",
      "latestDataKeySettingsDirective" : "tb-flot-latest-key-settings",
      "hasBasicMode" : true,
      "basicModeDirective" : "tb-flot-basic-config",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"showLines\":true,\"fillLines\":true,\"showPoints\":false},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#ffc107\",\"settings\":{\"showLines\":true,\"fillLines\":false,\"showPoints\":false},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Third\",\"color\":\"#f44336\",\"settings\":{},\"_hash\":0.7790117025744843,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"decimals\":0,\"aggregationType\":null,\"usePostProcessing\":null,\"postFuncBody\":null}]}],\"timewindow\":{\"hideInterval\":false,\"hideLastInterval\":false,\"hideQuickInterval\":false,\"hideAggregation\":false,\"hideAggInterval\":false,\"hideTimezone\":false,\"selectedTab\":0,\"realtime\":{\"realtimeType\":0,\"timewindowMs\":60000,\"quickInterval\":\"CURRENT_DAY\",\"interval\":1000},\"aggregation\":{\"type\":\"AVG\",\"limit\":25000},\"timezone\":null},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"stack\":false,\"fontSize\":10,\"fontColor\":\"#545454\",\"showTooltip\":true,\"tooltipIndividual\":false,\"tooltipCumulative\":false,\"hideZeros\":false,\"grid\":{\"verticalLines\":true,\"horizontalLines\":true,\"outlineWidth\":1,\"color\":\"#545454\",\"backgroundColor\":null,\"tickColor\":\"#DDDDDD\"},\"xaxis\":{\"title\":null,\"showLabels\":true,\"color\":\"#545454\"},\"yaxis\":{\"min\":null,\"max\":null,\"title\":null,\"showLabels\":true,\"color\":\"#545454\",\"tickSize\":null,\"tickDecimals\":0,\"ticksFormatter\":\"\"},\"shadowSize\":4,\"smoothLines\":false,\"comparisonEnabled\":false,\"xaxisSecond\":{\"axisPosition\":\"top\",\"title\":null,\"showLabels\":true},\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"bottom\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"customLegendEnabled\":false},\"title\":\"exportTable\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"configMode\":\"advanced\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\",\"useDashboardTimewindow\":false,\"displayTimewindow\":true,\"titleFont\":null,\"titleColor\":null,\"enableDataExport\":true,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "91f33091-1d83-11ef-982c-0f5367becb87"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}